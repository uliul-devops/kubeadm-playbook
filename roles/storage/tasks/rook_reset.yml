---
# - hosts: master
#   become: yes
#   become_method: sudo
#   tags:
#   - rook
#   - reset
#   tasks:

- block:
  - set_fact:
      env_kc: '{{ proxy_env |default({}) | combine ({"PATH" : "/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin"  }) | combine ({"KUBECONFIG" :"/etc/kubernetes/admin.conf"}) }}'

  - name: deploy rook operator (using helm chart) - prefered method
    environment: '{{env_kc}}'
    command: 'helm delete --purge rook-operator '
    when: rook.operator_url is not defined
    ignore_errors: yes

  - name: clean install rook operator
    environment: '{{env_kc}}'
    command: /usr/bin/kubectl delete {{ item }}
    with_items:
    - "-n rook po/rook-client"
    - "-n rook po/rook-tools"
    - "-n rook cm/rook-config-override"
    - "-n rook deploy/rook-api"
    - "-n rook ds/osd"
    - "-n rook cluster rook"
    - "-n rook serviceaccount rook-api"
    - "clusterrole rook-api"
    - "clusterrolebinding rook-api"
    - "thirdpartyresources cluster.rook.io pool.rook.io"
    - "secret rook-rook-user"
    - "namespace rook"
    - "sc rook-block"
    tags:
    - reset
    ignore_errors: yes

  - name: clean install rook operator
    environment: '{{env_kc}}'
    command: /usr/bin/kubectl delete {{ item }}
    when: rook.operator_url is defined
    with_items:
    - "-f {{ rook.operator_url }}"

  - name: clean install rook secrets from all rook.allowed_consumer_namespaces
    # TODO: scan all namespaces and remove it. Do not rely on the previously defined rook.allowed_consumer_namespaces
    environment: '{{env_kc}}'
    command: /usr/bin/kubectl delete -n {{ item }} secret rook-admin
    when: rook.allowed_consumer_namespaces is defined
    with_items: "{{ rook.allowed_consumer_namespaces }}"
    ignore_errors: yes

  - name: rook post cleanup/reset sanity
    environment:
      KUBECONFIG: /etc/kubernetes/admin.conf
    shell: "kubectl get --all-namespaces pods --no-headers | grep -v -w 'Running' || true "
    register: command_result
    tags:
    - sanity
    until: command_result.stdout == ""
    retries: 30
    delay: 3
    changed_when: false

  - name: clean rook ceph persistant storage directories
    file: path=/storage/rook/* state=absent force=yes
    tags:
    - uninstall
    when: rook.reset.storage_delete is defined and rook.reset.storage_delete

  when: rook is defined and rook.enabled
  tags:
  - rook
  - reset
