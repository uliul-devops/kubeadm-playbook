---
#- hosts: master
#  become: yes
#  become_method: sudo
#  tags:
#  - helm_reset
#  - helm
#  - reset
#  tasks:

- set_fact:
    env_kc: '{{ proxy_env |default({}) | combine ({"PATH" : "/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin"  }) | combine ({"KUBECONFIG" :"/etc/kubernetes/admin.conf"}) }}'
  tags:
  - helm_reset
  - reset
  - helm_purge

- block:
  - name: helm reset - helm list all apps
    environment: '{{env_kc}}'
    shell: helm list | tail -n +2 | awk '{print $1}'
    register: command_results
    ignore_errors: yes
    changed_when: false
    tags:
    - helm_purge

  - name: helm reset - helm delete purge all apps
    environment: '{{env_kc}}'
    command: helm delete --purge {{ item }}
    with_items: "{{ command_results.stdout_lines }}"
    ignore_errors: yes
    tags:
    - helm_purge

  - name: helm reset - wait till all helm apps are deleted/purged
    shell: helm list | tail -n +2
    register: command_result
    until: command_result.stdout == ""
    retries: 20
    delay: 3
    changed_when: false
    ignore_errors: yes
    tags:
    - helm_purge

  - name: helm reset - remove/cleanup
    environment: '{{env_kc}}'
    shell: ( helm reset --force --remove-helm-home --tiller-connection-timeout 30 || true ) && sleep 2 && ( kubectl --namespace=kube-system delete --cascade=true --now=true --include-uninitialized=true --wait=true --ignore-not-found=true deployment tiller-deploy || true ) && sleep 2 && ( kubectl delete service --namespace=kube-system tiller-deploy  || true ) && (  kubectl delete clusterrolebinding tiller  || true ) && (  kubectl delete --namespace=kube-system sa tiller )
    ignore_errors: yes 

  - name: helm reset - list all k8s resources with tiller-deploy in their name
    environment: '{{env_kc}}'
    shell: kubectl --namespace=kube-system get all --no-headers | grep tiller-deploy | awk '{print $1}'
    register: command_results
    ignore_errors: yes
    changed_when: false

  - name: helm reset - delete all k8s resources with tiller-deploy in their name
    environment: '{{env_kc}}'
    command: kubectl --namespace=kube-system delete --cascade=true --now=true --include-uninitialized=true --wait=true --ignore-not-found=true {{ item }}
    with_items: "{{ command_results.stdout_lines }}"
    ignore_errors: yes
    tags:
    - helm_purge

  tags:
  - helm_reset
  - reset

